@{
    ViewData["Title"] = "Statistiche";
}

<div class="container-fluid py-4 bg-light text-dark min-vh-100">
    <!-- HEADER -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="fw-bold mb-0 text-dark">Dashboard Statistiche</h1>
            <small class="text-muted">Panoramica aggiornata dei dati gestionali</small>
        </div>
        <button id="refreshButton" class="btn btn-outline-primary">
            <i class="bi bi-arrow-clockwise"></i> Aggiorna
        </button>
    </div>

    <!-- KPI CARDS -->
    <div class="row g-4 mb-5">
        <div class="col-6 col-lg-3">
            <div class="card shadow-sm border-0 text-center p-3 stat-card-light">
                <div class="mb-2 text-primary"><i class="bi bi-building fs-1"></i></div>
                <h2 class="fw-bold text-dark">@ViewBag.TotaleEnti</h2>
                <p class="text-muted mb-0">Totale Enti</p>
            </div>
        </div>
        <div class="col-6 col-lg-3">
            <div class="card shadow-sm border-0 text-center p-3 stat-card-light">
                <div class="mb-2 text-info"><i class="bi bi-droplet fs-1"></i></div>
                <h2 class="fw-bold text-dark">@ViewBag.TotaleUtenze</h2>
                <p class="text-muted mb-0">Utenze Idriche</p>
            </div>
        </div>
        <div class="col-6 col-lg-3">
            <div class="card shadow-sm border-0 text-center p-3 stat-card-light">
                <div class="mb-2 text-success"><i class="bi bi-geo-alt fs-1"></i></div>
                <h2 class="fw-bold text-dark">@ViewBag.TotaleToponomi</h2>
                <p class="text-muted mb-0">Totale Toponimi</p>
            </div>
        </div>
        <div class="col-6 col-lg-3">
            <div class="card shadow-sm border-0 text-center p-3 stat-card-light">
                <div class="mb-2 text-danger"><i class="bi bi-exclamation-triangle fs-1"></i></div>
                <h2 class="fw-bold text-dark">@ViewBag.TotaleToponomiDaSistemare</h2>
                <p class="text-muted mb-0">Toponimi da Sistemare</p>
            </div>
        </div>
    </div>

    <!-- GRAFICI -->
    <div class="row g-4">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0 stat-card-light h-100">
                <div class="card-header bg-transparent text-dark fw-bold">Domande per Ente</div>
                <div class="card-body">
                    <canvas id="domandeEnteChart" height="120"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow-sm border-0 stat-card-light h-100">
                <div class="card-header bg-transparent text-dark fw-bold">Esito Domande</div>
                <div class="card-body">
                    <canvas id="domandeEsitoChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mt-1">
        <div class="col-md-4">
            <div class="card shadow-sm border-0 stat-card-light h-100">
                <div class="card-header bg-transparent text-dark fw-bold">Utenze Idriche per Ente</div>
                <div class="card-body">
                    <canvas id="utenzeEnteChart" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-0 stat-card-light h-100">
                <div class="card-header bg-transparent text-dark fw-bold">Anagrafe per Ente</div>
                <div class="card-body">
                    <canvas id="anagrafeChart" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-0 stat-card-light h-100">
                <div class="card-header bg-transparent text-dark fw-bold">Toponimi per Ente</div>
                <div class="card-body">
                    <canvas id="toponimiChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- STILE CUSTOM -->
<style>
    body {
        background-color: #f8f9fa; /* Sfondo chiaro */
        color: #212529; /* Testo scuro */
    }
    .stat-card-light {
        background: #ffffff;
        border-radius: 1rem;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    .stat-card-light:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.75rem 1.25rem rgba(0,0,0,0.1);
    }
    .stat-card-light h2 {
        font-size: 2.2rem;
    }
    .card-header {
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }
    .footer {
        color: #212529 !important;
        fill: #212529 !important;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.getElementById('refreshButton').addEventListener('click', function() {
            location.reload();
        });

        // Colori chiari per i grafici
        Chart.defaults.color = "#212529";
        Chart.defaults.borderColor = "rgba(0,0,0,0.1)";

        // Domande per ente
        const domandeLabels = @Html.Raw(Json.Serialize(ViewBag.DomandeLabels));
        const domandeValues = @Html.Raw(Json.Serialize(ViewBag.DomandeValues));
        
        new Chart(document.getElementById('domandeEnteChart'), {
            type: 'line',
            data: {
                labels: domandeLabels,
                datasets: [{
                    label: 'Domande effettuati',
                    data: domandeValues,
                    backgroundColor: 'rgba(54, 162, 235, 0.4)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    tension: 0.3,
                    fill: false
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Esito domande
        new Chart(document.getElementById('domandeEsitoChart'), {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.DomandeLabels)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.DomandeValues)),
                    backgroundColor: ['#28a745', '#ffc107', '#dc3545', '#6c757d']
                }]
            },
            options: { responsive: true }
        });

        // Utenze idriche
        new Chart(document.getElementById('utenzeEnteChart'), {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.UtenzeIdricheLabels)),
                datasets: [{
                    label: 'Utenze Idriche',
                    data: @Html.Raw(Json.Serialize(ViewBag.UtenzeIdricheValues)),
                    backgroundColor: 'rgba(13, 110, 253, 0.4)',
                    borderColor: '#0d6efd'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Anagrafe
        new Chart(document.getElementById('anagrafeChart'), {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.AnagrafeLabels)),
                datasets: [{
                    label: 'Anagrafe',
                    data: @Html.Raw(Json.Serialize(ViewBag.AnagrafeValues)),
                    backgroundColor: 'rgba(25, 135, 84, 0.6)'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Toponimi
        new Chart(document.getElementById('toponimiChart'), {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.ToponimiLabels)),
                datasets: [{
                    label: 'Toponimi',
                    data: @Html.Raw(Json.Serialize(ViewBag.ToponimiValues)),
                    backgroundColor: 'rgba(255, 193, 7, 0.6)'
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });
    </script>
}
