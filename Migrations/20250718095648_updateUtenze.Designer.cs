// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BonusIdrici2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250718095648_updateUtenze")]
    partial class updateUtenze
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Ente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cap")
                        .HasColumnType("longtext");

                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("longtext");

                    b.Property<string>("Provincia")
                        .HasColumnType("longtext");

                    b.Property<string>("Regione")
                        .HasColumnType("longtext");

                    b.Property<string>("istat")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("enti", (string)null);
                });

            modelBuilder.Entity("Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCaricamento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_caricamento");

                    b.Property<DateTime?>("DataFine")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_fine");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inizio");

                    b.Property<int>("IdEnte")
                        .HasColumnType("int")
                        .HasColumnName("id_ente");

                    b.Property<string>("NomeFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("PercorsoFile")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("percorso");

                    b.HasKey("Id");

                    b.ToTable("fileuploads", (string)null);
                });

            modelBuilder.Entity("Models.UtenzaIdrica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEnte")
                        .HasColumnType("int")
                        .HasColumnName("id_ente");

                    b.Property<string>("codiceFiscale")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("codice_fiscale");

                    b.Property<string>("cognome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cognome");

                    b.Property<string>("idAcquedotto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("idAcquedotto");

                    b.Property<string>("indirizzoUbicazione")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("indirizzo_ubicazione");

                    b.Property<string>("interno")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("interno");

                    b.Property<string>("matricolaContatore")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("matricola_contatore");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("numeroCivico")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numero_civico");

                    b.Property<DateTime?>("periodoFinale")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("periodo_finale");

                    b.Property<DateTime>("periodoIniziale")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("periodo_iniziale");

                    b.Property<string>("piano")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("piano");

                    b.Property<string>("scalaUbicazione")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("scala_ubicazione");

                    b.Property<int>("stato")
                        .HasColumnType("int")
                        .HasColumnName("stato");

                    b.Property<string>("subUbicazione")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sub_ubicazione");

                    b.Property<string>("tipoUtenza")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_utenza");

                    b.HasKey("id");

                    b.ToTable("utenzeidriche", (string)null);
                });

            modelBuilder.Entity("Dichiarante.Dichiarante", b =>
                {
                    b.Property<int>("IdDichiarante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodiceFamiglia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodiceFiscaleIntestatarioScheda")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ComuneNascita")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DataNascita")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IndirizzoResidenza")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeEnte")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroCivico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroComponenti")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Parentela")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sesso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdDichiarante");

                    b.ToTable("Dichiaranti");
                });
#pragma warning restore 612, 618
        }
    }
}
